{"version":3,"sources":["app/App.module.less","app/Google.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","viewBox","height","d","fill","App","className","styles","warpper","size","fixed","href","header","Google","body","data","map","item","idx","isNotFound","status","key","classnames","notFound","url","target","type","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,QAAU,qBAAqB,OAAS,oBAAoB,KAAO,kBAAkB,SAAW,wB,uICCnG,aACb,OACE,yBAAKC,QAAQ,gBAAgBC,OAAO,MAClC,0BAAMC,EAAE,kcAAkcC,KAAK,YAC/c,0BAAMD,EAAE,0bAA0bC,KAAK,YACvc,0BAAMD,EAAE,6xBAA6xBC,KAAK,YAC1yB,0BAAMD,EAAE,oEAAoEC,KAAK,YACjF,0BAAMD,EAAE,0kBAA0kBC,KAAK,YACvlB,0BAAMD,EAAE,ktBAAktBC,KAAK,c,OCIruB,IAoCeC,EApCH,kBACV,yBAAKC,UAAWC,IAAOC,SACrB,kBAAC,IAAD,CAAeC,KAAM,GAAIC,OAAK,EAACC,KAAK,yCACpC,4BAAQL,UAAWC,IAAOK,QACxB,kBAACC,EAAD,OAEF,2BAAOP,UAAWC,IAAOO,MACvB,+BACE,+BACE,4BACE,iCACA,mCACA,sCACA,oCACA,+CAGJ,gCACKC,EAAKA,MAAQ,IAAmBC,KAAI,SAACC,EAAMC,GAC5C,I,MAAMC,EAA6B,MAAhBF,EAAKG,OACxB,OACE,wBAAIC,IAAKH,EAAKZ,UAAWgB,K,EAAU,G,EAAA,UAAOf,IAAOgB,U,EAAaJ,E,kGAC5D,4BAAKD,EAAM,GACX,4BAAI,uBAAGP,KAAMM,EAAKO,IAAKC,OAAO,WAAWR,EAAKO,MAC9C,4BAAKP,EAAKG,QAAU,KACpB,4BAAKH,EAAKS,MAAQ,KAClB,0C,MC5BIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.3d2fb969.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"warpper\":\"App_warpper__1IFWN\",\"header\":\"App_header__1xeQQ\",\"body\":\"App_body__3zBss\",\"notFound\":\"App_notFound__2NME7\"};","import React from 'react';\n\nexport default () => {\n  return (\n    <svg viewBox=\"0 0 3027 1024\" height=\"50\">\n      <path d=\"M1288.347826 525.133913c0 142.135652-111.193043 246.873043-247.652174 246.873044s-247.652174-104.737391-247.652174-246.873044C793.043478 381.996522 904.236522 278.26087 1040.695652 278.26087s247.652174 103.735652 247.652174 246.873043z m-108.410435 0c0-88.82087-64.445217-149.593043-139.241739-149.593043S901.453913 436.313043 901.453913 525.133913c0 87.930435 64.445217 149.593043 139.241739 149.593044s139.241739-61.773913 139.241739-149.593044z\" fill=\"#EA4335\" />\n      <path d=\"M1822.608696 525.133913c0 142.135652-111.193043 246.873043-247.652174 246.873044s-247.652174-104.737391-247.652174-246.873044c0-143.026087 111.193043-246.873043 247.652174-246.873043s247.652174 103.735652 247.652174 246.873043z m-108.410435 0c0-88.82087-64.445217-149.593043-139.241739-149.593043s-139.241739 60.772174-139.241739 149.593043c0 87.930435 64.445217 149.593043 139.241739 149.593044s139.241739-61.773913 139.241739-149.593044z\" fill=\"#FBBC05\" />\n      <path d=\"M2334.608696 293.175652v443.213913c0 182.316522-107.52 256.77913-234.629566 256.779131-119.652174 0-191.666087-80.027826-218.824347-145.474783l94.386087-39.290435c16.806957 40.18087 57.989565 87.596522 124.326956 87.596522 81.363478 0 131.784348-50.198261 131.784348-144.695652v-35.506087h-3.784348c-24.264348 29.94087-71.012174 56.097391-130.003478 56.097391-123.436522 0-236.521739-107.52-236.521739-245.871304 0-139.353043 113.085217-247.763478 236.521739-247.763478 58.88 0 105.627826 26.156522 130.003478 55.206956h3.784348v-40.180869h102.956522z m-95.276522 232.848696c0-86.928696-57.989565-150.483478-131.784348-150.483478-74.796522 0-137.46087 63.554783-137.460869 150.483478 0 86.038261 62.664348 148.702609 137.460869 148.702609 73.794783 0 131.784348-62.664348 131.784348-148.702609z\" fill=\"#4285F4\" />\n      <path d=\"M2504.347826 33.391304v723.478261h-105.73913V33.391304h105.73913z\" fill=\"#34A853\" />\n      <path d=\"M2916.396522 606.386087l84.146087 56.097391c-27.158261 40.18087-92.605217 109.412174-205.690435 109.412174-140.243478 0-244.98087-108.410435-244.98087-246.873043 0-146.810435 105.627826-246.873043 232.848696-246.873044 128.111304 0 190.775652 101.954783 211.255652 157.050435l11.241739 28.048696-330.017391 136.681739c25.266087 49.530435 64.556522 74.796522 119.652174 74.796522 55.206957 0 93.495652-27.158261 121.544348-68.34087z m-259.005218-88.82087l220.605218-91.603478c-12.132174-30.831304-48.64-52.313043-91.603479-52.313043-55.095652 0-131.784348 48.64-129.001739 143.916521z\" fill=\"#EA4335\" />\n      <path d=\"M392.793043 460.911304V356.173913H745.73913c3.450435 18.253913 5.231304 39.846957 5.231305 63.22087 0 78.58087-21.481739 175.749565-90.713044 244.980869-67.33913 70.121739-153.377391 107.52-267.353043 107.52C181.648696 771.895652 4.006957 599.81913 4.006957 388.563478 4.006957 177.307826 181.648696 5.231304 392.904348 5.231304c116.869565 0 200.125217 45.857391 262.678261 105.627826l-73.906087 73.906087c-44.855652-42.073043-105.627826-74.796522-188.883479-74.796521-154.267826 0-274.921739 124.326957-274.921739 278.594782 0 154.267826 120.653913 278.594783 274.921739 278.594783 100.062609 0 157.050435-40.18087 193.558261-76.688696 29.606957-29.606957 49.085217-71.902609 56.765218-129.669565l-250.323479 0.111304z\" fill=\"#4285F4\" />\n    </svg>\n  );\n}","import React from 'react';\nimport classnames from 'classnames';\nimport GitHubCorners from '@uiw/react-github-corners';\nimport styles from './App.module.less';\nimport Google from './Google';\nimport data from '../../data.json';\n\n\ninterface DataItem {\n  status?: number;\n  type?: 'web' | 'scholar';\n  url: string;\n}\n\nconst App = () => (\n  <div className={styles.warpper}>\n    <GitHubCorners size={62} fixed href=\"https://github.com/jaywcjlove/google\" />\n    <header className={styles.header}>\n      <Google />\n    </header>\n    <aside className={styles.body}>\n      <table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>URL</th>\n            <th>Status</th>\n            <th>Type</th>\n            <th>Response Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {((data.data || []) as DataItem[]).map((item, idx) => {\n            const isNotFound = item.status === 400;\n            return (\n              <tr key={idx} className={classnames({ [`${styles.notFound}`]: isNotFound })}>\n                <td>{idx + 1}</td>\n                <td><a href={item.url} target=\"__blank\">{item.url}</a></td>\n                <td>{item.status || '-'}</td>\n                <td>{item.type || '-'}</td>\n                <td>-</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table> \n    </aside>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}